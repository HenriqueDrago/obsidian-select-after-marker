/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var f=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},w=(a,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of m(e))!u.call(a,s)&&s!==t&&l(a,s,{get:()=>e[s],enumerable:!(n=S(e,s))||n.enumerable});return a};var p=a=>w(l({},"__esModule",{value:!0}),a);var M={};f(M,{default:()=>r});module.exports=p(M);var i=require("obsidian"),b={marker:"+++",ignoreLineBreaks:!1},g=class extends i.PluginSettingTab{constructor(e,t){super(e,t),this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"Select Content Below Marker Settings"}),e.createEl("h2",{text:"TESSSSSSST"}),new i.Setting(e).setName("Marker String").setDesc("Enter the string that marks the beginning of the content to be selected.").addText(t=>t.setPlaceholder("Enter your marker").setValue(this.plugin.settings.marker).onChange(async n=>{this.plugin.settings.marker=n,await this.plugin.saveSettings()})),new i.Setting(e).setName("Ignore Line Breaks").setDesc("Toggle to ignore line breaks immediatelly after the marker.").addToggle(t=>t.setValue(this.plugin.settings.ignoreLineBreaks).onChange(async n=>{this.plugin.settings.ignoreLineBreaks=n,await this.plugin.saveSettings()}))}},r=class extends i.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"select-content-below-marker",name:"Select text below marker",editorCallback:(e,t)=>{let n=e.getValue(),s=this.settings.marker,c=n.indexOf(s);if(c!==-1){let o=c+s.length;if(this.settings.ignoreLineBreaks){let h=n.substring(o).match(/^\s+/);h&&(o+=h[0].length)}let d=e.offsetToPos(o),k=e.offsetToPos(n.length);e.setSelection(d,k),new i.Notice(`Content below "${s}" selected.`)}else new i.Notice(`Marker "${s}" not found.`)}}),this.addSettingTab(new g(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},b,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
